You are given a 0-indexed 2D integer matrix grid of size n * n with values in the range [1, n2]. Each integer appears exactly once except a which appears twice and b which is missing. The task is to find the repeating and missing numbers a and b.

Return a 0-indexed integer array ans of size 2 where ans[0] equals to a and ans[1] equals to b.

 class Solution:
    def findMissingAndRepeatedValues(self, grid: List[List[int]]) -> List[int]:
        m = defaultdict(int)
        n = len(grid)
        
        for i in range(n):
            for j in range(n):
                m[grid[i][j]] += 1
        
        for i in range (1, (n*n) +1 ):
            if m[i] == 2:
                a = i
            elif m[i] == 0:
                b = i

        return [a, b]
